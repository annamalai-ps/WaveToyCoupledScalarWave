# Schedule definitions for thorn WaveToyIMEX
# Define some schedule groups to organize the schedule

SCHEDULE GROUP WaveToyIMEX_InitialGroup AT initial
{
} "Set up initial conditions"



SCHEDULE GROUP WaveToyIMEX_PostStepGroup AT postinitial
{
} "Post-process state variables"

# SCHEDULE GROUP WaveToyIMEX_PostStepGroup AT postrestrict
# {
# } "Post-process state variables"

SCHEDULE GROUP WaveToyIMEX_PostStepGroup AT postregrid
{
} "Post-process state variables"



SCHEDULE GROUP WaveToyIMEX_PostStepGroup IN ODESolvers_PostStep
{
} "Post-process state variables"

SCHEDULE GROUP WaveToyIMEX_RHSGroup IN ODESolvers_RHS
{
} "Calculate RHS"



SCHEDULE GROUP WaveToyIMEX_AnalysisGroup AT analysis
{
} "Analyse state"

################################################################################



SCHEDULE WaveToyIMEX_Initialize IN WaveToyIMEX_InitialGroup
{
  LANG: C
  WRITES: phi(interior) mu(interior) zeta(interior) nu(interior)
} "Set up initial conditions for the wave equation"

SCHEDULE WaveToyIMEX_Sync IN WaveToyIMEX_PostStepGroup
{
  LANG: C
  OPTIONS: global
  SYNC: state
} "Boundary conditions for the wave equation"

SCHEDULE WaveToyIMEX_Boundaries IN WaveToyIMEX_PostStepGroup AFTER WaveToyIMEX_Sync
{
  LANG: C
  READS: state(interior)
  WRITES: state(boundary)
} "Boundary conditions for the wave equation"



# SCHEDULE WaveToyIMEX_EstimateError IN WaveToyIMEX_PostStepGroup AFTER (WaveToyIMEX_Sync WaveToyIMEX_Boundaries)
# {
#   LANG: C
#   READS: phi(interior) mu(interior) zeta(interior) nu(interior)
#   WRITES: CarpetX::regrid_error(interior)
# } "Estimate local error for regridding initial conditions"



SCHEDULE WaveToyIMEX_RHS IN WaveToyIMEX_RHSGroup
{
  LANG: C
  READS: phi(everywhere) mu(everywhere) zeta(everywhere) nu(everywhere)
  WRITES: phi_rhs(interior) mu_rhs(interior) zeta_rhs(interior) nu_rhs(interior)
  SYNC: rhs
} "Calculate RHS for the wave equation"

SCHEDULE WaveToyIMEX_RHSSync IN WaveToyIMEX_RHSGroup AFTER WaveToyIMEX_RHS
{
  LANG: C
  OPTIONS: global
  SYNC: rhs
} "Boundary conditions for the RHS of the wave equation"

SCHEDULE WaveToyIMEX_RHSBoundaries IN WaveToyIMEX_RHSGroup AFTER WaveToyIMEX_RHSSync
{
  LANG: C
  WRITES: phi_rhs(boundary) mu_rhs(boundary) zeta_rhs(boundary) nu_rhs(boundary)
} "Boundary conditions for the RHS of the wave equation"



# SCHEDULE WaveToyIMEX_Energy IN WaveToyIMEX_AnalysisGroup
# {
#   LANG: C
#   READS: phi(everywhere) psi(interior)
#   WRITES: eps(interior)
#   SYNC: energy
# } "Calculate energy density for the wave equation"

# SCHEDULE WaveToyIMEX_Error IN WaveToyIMEX_AnalysisGroup
# {
#   LANG: C
#   READS: phi(everywhere) psi(everywhere)
#   WRITES: phierr(everywhere) psierr(everywhere)
# } "Calculate error for the wave equation"
